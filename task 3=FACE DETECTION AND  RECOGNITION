import cv2
import os

def detect_faces(path_of_image):
    # Check if the image path is correct or not 
    if not os.path.exists(path_of_image):
        print(f"Image path {path_of_image} does not exist.")
        return

    # we have to Load Haar cascade model
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

    # Load an image which we want to detect
    image = cv2.imread(path_of_image)
    if image is None:
        print(f"Failed to load image at path {path_of_image}.")
        return

    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Detect face 
    faces = face_cascade.detectMultiScale(gray_image, scaleFactor=1.1, minNeighbors=5)

    # Draw rectangle around faces for detection
    for (x, y, w, h) in faces:
        cv2.rectangle(image, (x, y), (x+w, y+h), (255, 0, 0), 2)

    # Display the output
    cv2.imshow('Image', image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
    
#images path for this code    
#"C:\Users\ashis\OneDrive\Pictures\WhatsApp Image 2024-07-24 at 15.48.41_b15e16a1.jpg"
#"C:\Users\ashis\OneDrive\Pictures\Screenshot 2024-07-24 155333.png"
# Example usage

image_path = r"C:\Users\ashis\OneDrive\Pictures\WhatsApp Image 2024-07-24 at 15.48.41_b15e16a1.jpg"
print("Image Path Exists:", os.path.exists(image_path))
detect_faces(image_path)
